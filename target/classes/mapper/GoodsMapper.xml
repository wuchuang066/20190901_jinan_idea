<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zpark.mapper.GoodsMapper">
    <resultMap id="BaseResultMap" type="com.zpark.entity.Goods">
        <id column="goods_id" property="goodsId" jdbcType="INTEGER"/>
        <result column="goods_name" property="goodsName" jdbcType="VARCHAR"/>
        <result column="goods_price" property="goodsPrice" jdbcType="DOUBLE"/>
        <result column="goods_discount" property="goodsDiscount" jdbcType="DOUBLE"/>
        <result column="goods_new" property="goodsNew" jdbcType="INTEGER"/>
        <result column="goods_hot" property="goodsHot" jdbcType="INTEGER"/>
        <result column="goods_upershelf" property="goodsUpershelf" jdbcType="INTEGER"/>
        <result column="goods_brief" property="goodsBrief" jdbcType="VARCHAR"/>
        <result column="goods_introduction" property="goodsIntroduction" jdbcType="VARCHAR"/>
        <result column="goods_image" property="goodsImage" jdbcType="VARCHAR"/>
        <result column="level_id" property="levelId" jdbcType="INTEGER"/>
        <result column="goods_stock" property="goodsStock" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    goods_id, goods_name, goods_price, goods_discount, goods_new, goods_hot, goods_upershelf, 
    goods_brief, goods_introduction, goods_image, level_id, goods_stock
  </sql>
    <select id="selectPages" resultType="com.zpark.entity.Goods" parameterType="Goods">
        select
        g.goods_id, g.goods_name, g.goods_price, g.goods_discount, g.goods_new, g.goods_hot, g.goods_upershelf,
        g.goods_brief, g.goods_introduction, g.goods_image, g.level_id, g.goods_stock,r.receiver_id
        from goods g
        join `level` l on
        g.level_id = l.level_id
        join receiver r on
        r.receiver_id = l.receiver_id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="goodsName!=null and goodsName!=''">
                and g.goods_name like concat('%',#{goodsName},'%')
            </if>
            <if test="priceMin!=null and priceMin!= 0">
                and g.goods_price >= #{priceMin}
            </if>
            <if test="priceMax!=null and priceMax!= 0">
                and g.goods_price &lt;= #{priceMax}
            </if>
            <if test="levelId!=null and levelId!= 0">
                and g.level_id = #{levelId}
            </if>
            <if test="receiverId!=null and receiverId!= 0">
                and r.receiver_id = #{receiverId}
            </if>
        </trim>
        order by goods_id desc
    </select>
</mapper>